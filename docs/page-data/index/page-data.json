{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","webpackCompilationHash":"30e0010af652ca4bf1a2","result":{"data":{"deck":{"id":"2bfa9155-0dbb-5003-81af-4fd5ecb94fa9","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = myTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"link\", {\n    href: \"https://pvinis.github.io/iosevka-webfont/2.3.0/webfont.css\",\n    rel: \"stylesheet\"\n  })), mdx(\"h1\", null, \"Upgrading React Native projects\"), mdx(\"h2\", null, \"with Pavlos Vinieratos\"), mdx(\"h4\", null, \"React Native EU \", mdx(\"br\", null), \" Wroclaw, Poland\"), mdx(\"h4\", null, \"6 September 2019\"), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Thanks to RN EU!\"), mdx(\"hr\", null), mdx(Split, {\n    mdxType: \"Split\"\n  }, mdx(\"img\", {\n    src: myFace\n  }), mdx(\"p\", null, \"I'm \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pavlos\"), \".\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pvinis\"), \" on almost everything online.\"), mdx(\"p\", null, \"I work with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Sense Health\"), \" making \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://niceday.app/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"NiceDay\")), \".\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"div\", null, \"I am involved with\", mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"upgrade-helper\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rn-diff-purge\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react-native\"), \" PRs\")), mdx(\"p\", null, \"I love \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"upgrading\"), \"!\")))), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"PR with creative names like `Crash Heaven`\"), mdx(\"hr\", null), mdx(\"p\", null, \"I enjoy making things that:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"work\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"work \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"well\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"work \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"simply\"))), mdx(\"p\", null, \"mostly in that order.\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Upgrading React Native projects\"), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"past: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pain\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"present: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fine\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"future: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"easy life\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Past: \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"pain\")), mdx(\"hr\", null), mdx(\"p\", null, \"Question:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"What do you dislike about React Native?\\\"\")), mdx(\"p\", null, \"Top voted answer:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"upgrading requires a lot (too much?) effort\\\"\")), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"570 votes\", mdx(\"p\", null, \"next was debuggin with 350 votes\")), mdx(\"hr\", null), mdx(\"p\", null, \"People love React Native\"), mdx(RAppear, {\n    mdxType: \"RAppear\"\n  }, mdx(\"h2\", null, \"Upgrading\"), mdx(\"p\", null, \"People love \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fresh\"), \" React Native\")), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"the dreadful part for many\", mdx(\"p\", null, \"comes every so often\"), mdx(\"p\", null, \"per 2 weeks, 1 month, big feature\")), mdx(\"hr\", null), mdx(\"p\", null, \"It's hard because not everyone is an expert on ios, android, js/ts eco, at the same time.\\nios has cocoapods, carthage\"), mdx(\"p\", null, \"android has gradle\"), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"its hard because\"), mdx(\"hr\", null), mdx(\"p\", null, \"js/ts has packages like babel, metro, eslint, tsc\\nupGrade was just change the package number, yarn install, and see if it works. some devs had ideas to automate this, and we got the original \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-native upgrade\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rnpm upgrade\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-native-git-upgrade\"), \", the rn-diff repo, rn-diff-purge. suffice it to say there were many iterations.\\nkept rn-diff with a list of patches genarated from upgrading a simple rn app, that other users could apply. i found that and always manually upgraded, since that way i had a good idea of what changed. after a while, that got hard to maintain, so guess what, (xkcd about the frameworks +1) i forked rn-diff and made rn-diff-purge since it had to change the gen script enough. so it was easier as a fork. i wanted it for me, as i was and am still a fan of manual upgrading.\"), mdx(\"hr\", null));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"2bfa9155-0dbb-5003-81af-4fd5ecb94fa9","slug":"","title":"Upgrading React Native projects"}}}